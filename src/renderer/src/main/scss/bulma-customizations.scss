@import '~bulma/sass/utilities/derived-variables.sass';
@import '~bulma/sass/elements/box.sass';

// Navbar
$navbar-height: 3.75rem;
$navbar-item-img-max-height: 2.5rem;
$navbar-breakpoint: 0;

// Flex Gap
$spacing-values: (
    '0': 0,
    '1': 0.25rem,
    '2': 0.5rem,
    '3': 0.75rem,
    '4': 1rem,
    '5': 1.5rem,
    '6': 3rem,
) !default;

@each $name, $value in $spacing-values {
    .is-flex-gap-#{$name} {
        gap: $value !important;
    }
}

// Height/Width
$size-values: (
    '25': 25%,
    '50': 50%,
    '75': 75%,
    '100': 100%,
    'auto': 'auto',
) !default;

@each $name, $value in $size-values {
    .w-#{$name} {
        width: $value !important;
    }
    .h-#{$name} {
        height: $value !important;
    }
}

// Darken table rows on hover
$table-row-hover-background-color: #ccc;

.text-center {
    text-align: center;
}

// Borders
@each $name, $pair in $colors {
    .is-#{$name}-border {
        border-color: nth($pair, 1) !important;
    }
}

@each $name, $color in $shades {
    .is-#{$name}-border {
        border-color: $color !important;
    }
}

@for $i from 1 through 4 {
    .has-top-border-#{$i} {
        border-top-width: #{$i}px;
        border-top-style: solid;
        border-color: #000;
    }
    .has-right-border-#{$i} {
        border-right-width: #{$i}px;
        border-right-style: solid;
        border-color: #000;
    }
    .has-bottom-border-#{$i} {
        border-bottom-width: #{$i}px;
        border-bottom-style: solid;
        border-color: #000;
    }
    .has-left-border-#{$i} {
        border-left-width: #{$i}px;
        border-left-style: solid;
        border-color: #000;
    }
    .has-border-#{$i} {
        border-width: #{$i}px;
        border-style: solid;
        border-color: #000;
    }
}

// Rounded Borders
.rounded-none {
    border-radius: 0px;
}
.rounded-sm {
    border-radius: 0.125rem; /* 2px */
}
.rounded {
    border-radius: 0.25rem; /* 4px */
}
.rounded-md {
    border-radius: 0.375rem; /* 6px */
}
.rounded-lg {
    border-radius: 0.5rem; /* 8px */
}
.rounded-xl {
    border-radius: 0.75rem; /* 12px */
}
.rounded-2xl {
    border-radius: 1rem; /* 16px */
}
.rounded-3xl {
    border-radius: 1.5rem; /* 24px */
}

// Fills Box Width
.is-full-box-width {
    margin-left: -#{$box-padding};
    margin-right: -#{$box-padding};
}

// Colored Box-shadows
@each $name, $pair in $colors {
    .has-#{$name}-shadow {
        box-shadow: 0 0 0 0.125em rgb(from nth($pair, 1) r g b / 0.25);
    }
}

// Shaded Box-shadows
@each $name, $color in $shades {
    .has-#{$name}-shadow {
        box-shadow: 0 0 0 0.125em rgb(from nth($color, 1) r g b / 0.25);
    }
}

// Overflow Options
$overflow-values: (visible, hidden, clip, scroll, auto) !default;

@each $value in $overflow-values {
    .is-overflow-#{$value} {
        overflow: $value;
    }
    .is-overflow-y-#{$value} {
        overflow-y: $value;
    }
    .is-overflow-x-#{$value} {
        overflow-x: $value;
    }
}

// Circle button
.button.is-circle {
    border-radius: 50%;
    width: 3em;
    height: 3em;
    padding: 0;
}

// Drag-n-drop
.is-draggable {
    cursor: grab;
    &:active {
        cursor: grabbing;
    }
}
